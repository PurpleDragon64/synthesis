pomdp

// arena definition
const int WIDTH = 5;
const int HEIGHT = 3;

const int xMIN = 0;
const int xMAX = WIDTH-1;
const int yMIN = 0;
const int yMAX = HEIGHT-1;

// holes
hole double h22 in {0.5, 0.9};
hole double h00 in {0.2, 0.6};

// goal
formula goal = x=xMAX & y=yMIN & traped=false;
label "goal" = goal;

// movement
formula canGoRight = x<xMAX & traped=false;
formula canGoDown  = y>yMIN & traped=false;

formula goRight = min(x+1, xMAX);
formula goDown  = max(y-1, yMIN);

formula noTrap = (x!=2 | y!=2) & (x!=0 | y!=0);

// agent
module agent
    x : [xMIN..xMAX] init xMIN;
    y : [yMIN..yMAX] init yMAX;
    traped : bool init false;

    [r] !traped & noTrap -> (x'=goRight);
    [d] !traped & noTrap -> (y'=goDown);

    [r] !traped & x=2&y=2 -> h22 : (x'=goRight)&(traped'=true) + 1-h22 : (x'=goRight);
    [d] !traped & x=2&y=2 -> h22 : (y'=goDown)&(traped'=true) + 1-h22 : (y'=goDown);

    [r] !traped & x=0&y=0 -> h00 : (x'=goRight)&(traped'=true) + 1-h00 : (x'=goRight);
    [d] !traped & x=0&y=0 -> h00 : (y'=goDown)&(traped'=true) + 1-h00 : (y'=goDown);

    [p] traped -> 1 : (traped'=false);

endmodule

// observables
observable "finished" = goal;
observable "traped" = traped;
observable "canGoRight" = canGoRight;
observable "canGoDown" = canGoDown;

// rewards
rewards "penalty"
    true : 1;
    [p] true : 100;
endrewards